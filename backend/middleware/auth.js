const jwt=require('jsonwebtoken');const User=require('../models/User');const auth=async(req,res,next)=>{try{const token=req.headers.authorization&&req.headers.authorization.split(' ')[1];if(!token)return res.status(401).json({msg:'No token'});const decoded=jwt.verify(token,process.env.JWT_SECRET||'change_this_secret');req.user=await User.findById(decoded.id).select('-password');next();}catch(e){return res.status(401).json({msg:'Invalid token'});}};const role=(roles=[])=> (req,res,next)=>{if(!req.user)return res.status(401).json({msg:'Not auth'});if(!roles.includes(req.user.role))return res.status(403).json({msg:'Forbidden'});next();};module.exports={auth,role};