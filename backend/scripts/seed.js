require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });const mongoose=require('mongoose');const User=require('../models/User');const Job=require('../models/Job');const Proposal=require('../models/Proposal');const MONGO=process.env.MONGO_URI||'mongodb://localhost:27017/freelance_platform';async function run(){await mongoose.connect(MONGO);await Promise.all([User.deleteMany({}),Job.deleteMany({}),Proposal.deleteMany({})]);const admin=new User({name:'Admin',email:'admin@demo.com',password:'admin123',role:'admin'});const user=new User({name:'Client',email:'client@demo.com',password:'client123',role:'user'});const freelancer=new User({name:'Freelancer',email:'freelancer@demo.com',password:'freelancer123',role:'freelancer',skills:['React','Node']});await admin.save();await user.save();await freelancer.save();const job1=new Job({title:'Build a React landing page',description:'Simple responsive landing page',budget:200,createdBy:user._id,status:'approved'});const job2=new Job({title:'Node API for products',description:'CRUD API with auth',budget:300,createdBy:user._id,status:'pending'});await job1.save();await job2.save();console.log('Seeded: admin/admin123, client/client123, freelancer/freelancer123');await mongoose.disconnect();process.exit(0);}run().catch(e=>{console.error(e);process.exit(1);});