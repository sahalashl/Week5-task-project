const express=require('express');const router=express.Router();const Proposal=require('../models/Proposal');const Job=require('../models/Job');const {auth,role}=require('../middleware/auth');router.post('/',auth,role(['freelancer']),async(req,res)=>{try{const {jobId,coverLetter,bid}=req.body;const job=await Job.findById(jobId);if(!job)return res.status(404).json({msg:'Job not found'});const p=new Proposal({job:jobId,freelancer:req.user._id,coverLetter,bid});await p.save();res.json(p);}catch(e){res.status(500).json({msg:'err',error:e.message});}});router.get('/mine',auth,role(['freelancer']),async(req,res)=>{const list=await Proposal.find({freelancer:req.user._id}).populate('job');res.json(list);});module.exports=router;